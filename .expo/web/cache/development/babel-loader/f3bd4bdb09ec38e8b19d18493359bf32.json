{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar defaultState = {\n  selectedItems: {\n    items: [],\n    restaurantName: \"\"\n  }\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        var newState = _objectSpread({}, state);\n\n        if (action.payload.checkboxValue) {\n          console.log(\"ADD TO CART\");\n          newState.selectedItems = {\n            items: [].concat(_toConsumableArray(newState.selectedItems.items), [action.payload]),\n            restaurantName: action.payload.restaurantName\n          };\n        } else {\n          console.log(\"REMOVE FROM CART\");\n          newState.selectedItems = {\n            items: _toConsumableArray(newState.selectedItems.items.filter(function (item) {\n              return item.title !== action.payload.title;\n            })),\n            restaurantName: action.payload.restaurantName\n          };\n        }\n\n        console.log(newState, \"ðŸ‘‰\");\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/thebeliverbot/Desktop/practice-stuff/food-ordring-app/uber-eats-clone/redux/reducers/cartReducer.js"],"names":["defaultState","selectedItems","items","restaurantName","cartReducer","state","action","type","newState","payload","checkboxValue","console","log","filter","item","title"],"mappings":";;;;;;;AAAA,IAAIA,YAAY,GAAG;AACfC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,cAAc,EAAE;AAA7B;AADA,CAAnB;;AAIE,IAAIC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,YAAIC,QAAQ,qBAAQH,KAAR,CAAZ;;AAEA,YAAIC,MAAM,CAACG,OAAP,CAAeC,aAAnB,EAAkC;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEAJ,UAAAA,QAAQ,CAACP,aAAT,GAAyB;AACvBC,YAAAA,KAAK,+BAAMM,QAAQ,CAACP,aAAT,CAAuBC,KAA7B,IAAoCI,MAAM,CAACG,OAA3C,EADkB;AAEvBN,YAAAA,cAAc,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFR,WAAzB;AAID,SAPD,MAOO;AACLQ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAJ,UAAAA,QAAQ,CAACP,aAAT,GAAyB;AACvBC,YAAAA,KAAK,qBACAM,QAAQ,CAACP,aAAT,CAAuBC,KAAvB,CAA6BW,MAA7B,CACD,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,KAAL,KAAeT,MAAM,CAACG,OAAP,CAAeM,KAAxC;AAAA,aADC,CADA,CADkB;AAMvBZ,YAAAA,cAAc,EAAEG,MAAM,CAACG,OAAP,CAAeN;AANR,WAAzB;AAQD;;AACDQ,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsB,IAAtB;AACA,eAAOA,QAAP;AACD;;AAED;AACE,aAAOH,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["let defaultState = {\n    selectedItems: { items: [], restaurantName: \"\" },\n  };\n  \n  let cartReducer = (state = defaultState, action) => {\n    switch (action.type) {\n      case \"ADD_TO_CART\": {\n        let newState = { ...state };\n  \n        if (action.payload.checkboxValue) {\n          console.log(\"ADD TO CART\");\n  \n          newState.selectedItems = {\n            items: [...newState.selectedItems.items, action.payload],\n            restaurantName: action.payload.restaurantName,\n          };\n        } else {\n          console.log(\"REMOVE FROM CART\");\n          newState.selectedItems = {\n            items: [\n              ...newState.selectedItems.items.filter(\n                (item) => item.title !== action.payload.title\n              ),\n            ],\n            restaurantName: action.payload.restaurantName,\n          };\n        }\n        console.log(newState, \"ðŸ‘‰\");\n        return newState;\n      }\n  \n      default:\n        return state;\n    }\n  };\n  \n  export default cartReducer;"]},"metadata":{},"sourceType":"module"}