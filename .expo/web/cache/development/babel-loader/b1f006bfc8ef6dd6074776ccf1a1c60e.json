{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"marginLeft\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider } from \"react-native-elements\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  menuItemStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  titleStyle: {\n    fontSize: 19,\n    fontWeight: \"600\"\n  }\n});\nexport default function MenuItems(_ref) {\n  var restaurantName = _ref.restaurantName,\n      foods = _ref.foods,\n      hideCheckbox = _ref.hideCheckbox,\n      marginLeft = _ref.marginLeft;\n  var dispatch = useDispatch();\n\n  var selectItem = function selectItem(item, checkboxValue) {\n    return dispatch({\n      type: \"ADD_TO_CART\",\n      payload: _objectSpread(_objectSpread({}, item), {}, {\n        restaurantName: restaurantName,\n        checkboxValue: checkboxValue\n      })\n    });\n  };\n\n  var cartItems = useSelector(function (state) {\n    return state.cartReducer.selectedItems.items;\n  });\n\n  var isFoodInCart = function isFoodInCart(food, cartItems) {\n    return Boolean(cartItems.find(function (item) {\n      return item.title === food.title;\n    }));\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: foods.map(function (food, index) {\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.menuItemStyle,\n          children: [hideCheckbox ? _jsx(_Fragment, {}) : _jsx(BouncyCheckbox, {\n            iconStyle: {\n              borderColor: \"lightgray\",\n              borderRadius: 0\n            },\n            fillColor: \"green\",\n            isChecked: isFoodInCart(food, cartItems),\n            onPress: function onPress(checkboxValue) {\n              return selectItem(food, checkboxValue);\n            }\n          }), _jsx(FoodInfo, {\n            food: food\n          }), _jsx(FoodImage, {\n            food: food,\n            marginLeft: marginLeft ? marginLeft : 0\n          })]\n        }), _jsx(Divider, {\n          width: 0.5,\n          orientation: \"vertical\",\n          style: {\n            marginHorizontal: 20\n          }\n        })]\n      }, index);\n    })\n  });\n}\n\nvar FoodInfo = function FoodInfo(props) {\n  return _jsxs(View, {\n    style: {\n      width: 240,\n      justifyContent: \"space-evenly\"\n    },\n    children: [_jsx(Text, {\n      style: styles.titleStyle,\n      children: props.food.title\n    }), _jsx(Text, {\n      children: props.food.description\n    }), _jsx(Text, {\n      children: props.food.price\n    })]\n  });\n};\n\nvar FoodImage = function FoodImage(_ref2) {\n  var marginLeft = _ref2.marginLeft,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return _jsx(View, {\n    children: _jsx(Image, {\n      source: {\n        uri: props.food.image\n      },\n      style: {\n        width: 100,\n        height: 100,\n        borderRadius: 8,\n        marginLeft: marginLeft\n      }\n    })\n  });\n};","map":{"version":3,"sources":["/home/thebeliverbot/Desktop/practice-stuff/food-ordring-app/uber-eats-clone/components/restaurantDetail/MenuItems.js"],"names":["React","Divider","BouncyCheckbox","useDispatch","useSelector","styles","StyleSheet","create","menuItemStyle","flexDirection","justifyContent","margin","titleStyle","fontSize","fontWeight","MenuItems","restaurantName","foods","hideCheckbox","marginLeft","dispatch","selectItem","item","checkboxValue","type","payload","cartItems","state","cartReducer","selectedItems","items","isFoodInCart","food","Boolean","find","title","map","index","borderColor","borderRadius","marginHorizontal","FoodInfo","props","width","description","price","FoodImage","uri","image","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, Image, ScrollView } from \"react-native\";\nimport { Divider } from \"react-native-elements\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nconst styles = StyleSheet.create({\n  menuItemStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 20,\n  },\n\n  titleStyle: {\n    fontSize: 19,\n    fontWeight: \"600\",\n  },\n});\n\nexport default function MenuItems({\n  restaurantName,\n  foods,\n  hideCheckbox,\n  marginLeft,\n}) {\n  const dispatch = useDispatch();\n\n  const selectItem = (item, checkboxValue) =>\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: {\n        ...item,\n        restaurantName: restaurantName,\n        checkboxValue: checkboxValue,\n      },\n    });\n\n  const cartItems = useSelector(\n    (state) => state.cartReducer.selectedItems.items\n  );\n\n  const isFoodInCart = (food, cartItems) =>\n    Boolean(cartItems.find((item) => item.title === food.title));\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      {foods.map((food, index) => (\n        <View key={index}>\n          <View style={styles.menuItemStyle}>\n            {hideCheckbox ? (\n              <></>\n            ) : (\n              <BouncyCheckbox\n                iconStyle={{ borderColor: \"lightgray\", borderRadius: 0 }}\n                fillColor=\"green\"\n                isChecked={isFoodInCart(food, cartItems)}\n                onPress={(checkboxValue) => selectItem(food, checkboxValue)}\n              />\n            )}\n            <FoodInfo food={food} />\n            <FoodImage food={food} marginLeft={marginLeft ? marginLeft : 0} />\n          </View>\n          <Divider\n            width={0.5}\n            orientation=\"vertical\"\n            style={{ marginHorizontal: 20 }}\n          />\n        </View>\n      ))}\n    </ScrollView>\n  );\n}\n\nconst FoodInfo = (props) => (\n  <View style={{ width: 240, justifyContent: \"space-evenly\" }}>\n    <Text style={styles.titleStyle}>{props.food.title}</Text>\n    <Text>{props.food.description}</Text>\n    <Text>{props.food.price}</Text>\n  </View>\n);\n\nconst FoodImage = ({ marginLeft, ...props }) => (\n  <View>\n    <Image\n      source={{ uri: props.food.image }}\n      style={{\n        width: 100,\n        height: 100,\n        borderRadius: 8,\n        marginLeft: marginLeft,\n      }}\n    />\n  </View>\n);\n"]},"metadata":{},"sourceType":"module"}